*java.sql.SQLDataException* *SQLDataException* The subclass ofSQLExceptionthrown when the SQLState class value is '22'.

public class SQLDataException
  extends    |java.sql.SQLNonTransientException|

|java.sql.SQLDataException_Description|
|java.sql.SQLDataException_Fields|
|java.sql.SQLDataException_Constructors|
|java.sql.SQLDataException_Methods|

================================================================================================================================

*java.sql.SQLDataException_Constructors*
|java.sql.SQLDataException()|Constructs a SQLDataException object.
|java.sql.SQLDataException(String)|Constructs a SQLDataException object with a given  reason.
|java.sql.SQLDataException(String,String)|Constructs a SQLDataException object with a given  reason and SQLState.
|java.sql.SQLDataException(String,String,int)|Constructs a SQLDataException object with a given  reason, SQLState  and   vendor
|java.sql.SQLDataException(String,String,int,Throwable)|Constructs a SQLDataException object with a given  reason, SQLState, ve
|java.sql.SQLDataException(String,String,Throwable)|Constructs a SQLDataException object with a given  reason, SQLState and  ca
|java.sql.SQLDataException(String,Throwable)|Constructs a SQLDataException object with a given  reason and  cause.
|java.sql.SQLDataException(Throwable)|Constructs a SQLDataException object with a given  cause.

*java.sql.SQLDataException_Description*

The subclass of (|java.sql.SQLException|) thrown when the SQLState class value is '22'. This indicates various data errors, 
including but not limited to not-allowed conversion, division by 0 and invalid arguments to functions. 



*java.sql.SQLDataException()*

public SQLDataException()

Constructs a SQLDataException object. The reason, SQLState are initialized to null and the vendor code is initialized to 0. 

The cause is not initialized, and may subsequently be initialized by a call to (|java.lang.Throwable|) method. 


*java.sql.SQLDataException(String)*

public SQLDataException(java.lang.String reason)

Constructs a SQLDataException object with a given reason. The SQLState is initialized to null and the vendor code is 
initialized to 0. 

The cause is not initialized, and may subsequently be initialized by a call to (|java.lang.Throwable|) method. 

    reason - a description of the exception 

*java.sql.SQLDataException(String,String)*

public SQLDataException(
  java.lang.String reason,
  java.lang.String SQLState)

Constructs a SQLDataException object with a given reason and SQLState. The vendor code is initialized to 0. 

The cause is not initialized, and may subsequently be initialized by a call to (|java.lang.Throwable|) method. 

    reason - a description of the exception 
    SQLState - an XOPEN or SQL:2003 code identifying the exception 

*java.sql.SQLDataException(String,String,int)*

public SQLDataException(
  java.lang.String reason,
  java.lang.String SQLState,
  int vendorCode)

Constructs a SQLDataException object with a given reason, SQLState and vendorCode. 

The cause is not initialized, and may subsequently be initialized by a call to (|java.lang.Throwable|) method. 

    reason - a description of the exception 
    SQLState - an XOPEN or SQL:2003 code identifying the exception 
    vendorCode - a database vendor specific exception code 

*java.sql.SQLDataException(String,String,int,Throwable)*

public SQLDataException(
  java.lang.String reason,
  java.lang.String SQLState,
  int vendorCode,
  java.lang.Throwable cause)

Constructs a SQLDataException object with a given reason, SQLState, vendorCode and cause. 

    reason - a description of the exception 
    SQLState - an XOPEN or SQL:2003 code identifying the exception 
    vendorCode - a database vendor-specific exception code 
    cause - the underlying reason for this SQLException (which is saved for later retrieval by the getCause() method); may be null 
       indicating the cause is non-existent or unknown. 

*java.sql.SQLDataException(String,String,Throwable)*

public SQLDataException(
  java.lang.String reason,
  java.lang.String SQLState,
  java.lang.Throwable cause)

Constructs a SQLDataException object with a given reason, SQLState and cause. The vendor code is initialized to 0. 

    reason - a description of the exception. 
    SQLState - an XOPEN or SQL:2003 code identifying the exception 
    cause - the underlying reason for this SQLException (which is saved for later retrieval by the getCause() method); may be null 
       indicating the cause is non-existent or unknown. 

*java.sql.SQLDataException(String,Throwable)*

public SQLDataException(
  java.lang.String reason,
  java.lang.Throwable cause)

Constructs a SQLDataException object with a given reason and cause. The SQLState is initialized to null and the vendor code is 
initialized to 0. 

    reason - a description of the exception. 
    cause - the underlying reason for this SQLException (which is saved for later retrieval by the getCause() method); may be null 
       indicating the cause is non-existent or unknown. 

*java.sql.SQLDataException(Throwable)*

public SQLDataException(java.lang.Throwable cause)

Constructs a SQLDataException object with a given cause. The SQLState is initialized to null and the vendor code is initialized 
to 0. The reason is initialized to null if cause==null or to cause.toString() if cause!=null. 

    cause - the underlying reason for this SQLException (which is saved for later retrieval by the getCause() method); may be null 
       indicating the cause is non-existent or unknown. 

