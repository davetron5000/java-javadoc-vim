*java.io.OutputStreamWriter* *OutputStreamWriter* An OutputStreamWriter is a bridge from character streams to byte streams:
 Cha

public class OutputStreamWriter
  extends    |java.io.Writer|

|java.io.OutputStreamWriter_Description|
|java.io.OutputStreamWriter_Fields|
|java.io.OutputStreamWriter_Constructors|
|java.io.OutputStreamWriter_Methods|

================================================================================================================================

*java.io.OutputStreamWriter_Constructors*
|java.io.OutputStreamWriter(OutputStream)|Creates an OutputStreamWriter that uses the default character encoding.
|java.io.OutputStreamWriter(OutputStream,Charset)|Creates an OutputStreamWriter that uses the given charset.
|java.io.OutputStreamWriter(OutputStream,CharsetEncoder)|Creates an OutputStreamWriter that uses the given charset encoder.
|java.io.OutputStreamWriter(OutputStream,String)|Creates an OutputStreamWriter that uses the named charset.

*java.io.OutputStreamWriter_Methods*
|java.io.OutputStreamWriter.close()|
|java.io.OutputStreamWriter.flush()|Flushes the stream.
|java.io.OutputStreamWriter.getEncoding()|Returns the name of the character encoding being used by this stream.
|java.io.OutputStreamWriter.write(char[],int,int)|Writes a portion of an array of characters.
|java.io.OutputStreamWriter.write(int)|Writes a single character.
|java.io.OutputStreamWriter.write(String,int,int)|Writes a portion of a string.

*java.io.OutputStreamWriter_Description*

An OutputStreamWriter is a bridge from character streams to byte streams: Characters written to it are encoded into bytes using 
a specified <code>charset</code>(|java.nio.charset.Charset|) . The charset that it uses may be specified by name or may be 
given explicitly, or the platform's default charset may be accepted. 

Each invocation of a write() method causes the encoding converter to be invoked on the given character(s). The resulting bytes 
are accumulated in a buffer before being written to the underlying output stream. The size of this buffer may be specified, but 
by default it is large enough for most purposes. Note that the characters passed to the write() methods are not buffered. 

For top efficiency, consider wrapping an OutputStreamWriter within a BufferedWriter so as to avoid frequent converter 
invocations. For example: 



Writer out = new BufferedWriter(new OutputStreamWriter(System.out)); 

A surrogate pair is a character represented by a sequence of two char values: A high surrogate in the range 'uD800' to 'uDBFF' 
followed by a low surrogate in the range 'uDC00' to 'uDFFF'. 

A malformed surrogate element is a high surrogate that is not followed by a low surrogate or a low surrogate that is not 
preceded by a high surrogate. 

This class always replaces malformed surrogate elements and unmappable character sequences with the charset's default 
substitution sequence. The (|java.nio.charset.CharsetEncoder|) class should be used when more control over the encoding process 
is required. 



*java.io.OutputStreamWriter(OutputStream)*

public OutputStreamWriter(java.io.OutputStream out)

Creates an OutputStreamWriter that uses the default character encoding. 

    out - An OutputStream 

*java.io.OutputStreamWriter(OutputStream,Charset)*

public OutputStreamWriter(
  java.io.OutputStream out,
  java.nio.charset.Charset cs)

Creates an OutputStreamWriter that uses the given charset. 

    out - An OutputStream 
    cs - A charset 

*java.io.OutputStreamWriter(OutputStream,CharsetEncoder)*

public OutputStreamWriter(
  java.io.OutputStream out,
  java.nio.charset.CharsetEncoder enc)

Creates an OutputStreamWriter that uses the given charset encoder. 

    out - An OutputStream 
    enc - A charset encoder 

*java.io.OutputStreamWriter(OutputStream,String)*

public OutputStreamWriter(
  java.io.OutputStream out,
  java.lang.String charsetName)
  throws |java.io.UnsupportedEncodingException|
         
Creates an OutputStreamWriter that uses the named charset. 

    out - An OutputStream 
    charsetName - The name of a supported {@link java.nio.charset.Charset charset} 

*java.io.OutputStreamWriter.close()*

public void close()
  throws |java.io.IOException|
         




*java.io.OutputStreamWriter.flush()*

public void flush()
  throws |java.io.IOException|
         
Flushes the stream. 



*java.io.OutputStreamWriter.getEncoding()*

public |java.lang.String| getEncoding()

Returns the name of the character encoding being used by this stream. 

If the encoding has an historical name then that name is returned; otherwise the encoding's canonical name is returned. 

If this instance was created with the (|java.io.OutputStreamWriter|) constructor then the returned name, being unique for the 
encoding, may differ from the name passed to the constructor. This method may return null if the stream has been closed. 



    Returns: The historical name of this encoding, or possibly null if the stream has been closed 

*java.io.OutputStreamWriter.write(char[],int,int)*

public void write(
  char[] cbuf,
  int off,
  int len)
  throws |java.io.IOException|
         
Writes a portion of an array of characters. 


    cbuf - Buffer of characters 
    off - Offset from which to start writing characters 
    len - Number of characters to write 

*java.io.OutputStreamWriter.write(int)*

public void write(int c)
  throws |java.io.IOException|
         
Writes a single character. 



*java.io.OutputStreamWriter.write(String,int,int)*

public void write(
  java.lang.String str,
  int off,
  int len)
  throws |java.io.IOException|
         
Writes a portion of a string. 


    str - A String 
    off - Offset from which to start writing characters 
    len - Number of characters to write 


