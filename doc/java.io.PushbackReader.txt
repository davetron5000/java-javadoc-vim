*java.io.PushbackReader* *PushbackReader* A character-stream reader that allows characters to be pushed back into the
 stream.

public class PushbackReader
  extends    |java.io.FilterReader|

|java.io.PushbackReader_Description|
|java.io.PushbackReader_Fields|
|java.io.PushbackReader_Constructors|
|java.io.PushbackReader_Methods|

================================================================================================================================

*java.io.PushbackReader_Constructors*
|java.io.PushbackReader(Reader)|Creates a new pushback reader with a one-character pushback buffer.
|java.io.PushbackReader(Reader,int)|Creates a new pushback reader with a pushback buffer of the given size.

*java.io.PushbackReader_Methods*
|java.io.PushbackReader.close()|Closes the stream and releases any system resources associated with  it.
|java.io.PushbackReader.mark(int)|Marks the present position in the stream.
|java.io.PushbackReader.markSupported()|Tells whether this stream supports the mark() operation, which it does  not.
|java.io.PushbackReader.read()|Reads a single character.
|java.io.PushbackReader.read(char[],int,int)|Reads characters into a portion of an array.
|java.io.PushbackReader.ready()|Tells whether this stream is ready to be read.
|java.io.PushbackReader.reset()|Resets the stream.
|java.io.PushbackReader.skip(long)|Skips characters.
|java.io.PushbackReader.unread(char[])|Pushes back an array of characters by copying it to the front of the  pushback buffer.
|java.io.PushbackReader.unread(char[],int,int)|Pushes back a portion of an array of characters by copying it to the  front of t
|java.io.PushbackReader.unread(int)|Pushes back a single character by copying it to the front of the  pushback buffer.

*java.io.PushbackReader_Description*

A character-stream reader that allows characters to be pushed back into the stream. 



*java.io.PushbackReader(Reader)*

public PushbackReader(java.io.Reader in)

Creates a new pushback reader with a one-character pushback buffer. 

    in - The reader from which characters will be read 

*java.io.PushbackReader(Reader,int)*

public PushbackReader(
  java.io.Reader in,
  int size)

Creates a new pushback reader with a pushback buffer of the given size. 

    in - The reader from which characters will be read 
    size - The size of the pushback buffer 

*java.io.PushbackReader.close()*

public void close()
  throws |java.io.IOException|
         
Closes the stream and releases any system resources associated with it. Once the stream has been closed, further read(), 
unread(), ready(), or skip() invocations will throw an IOException. Closing a previously closed stream has no effect. 



*java.io.PushbackReader.mark(int)*

public void mark(int readAheadLimit)
  throws |java.io.IOException|
         
Marks the present position in the stream. The mark for class PushbackReader always throws an exception. 



*java.io.PushbackReader.markSupported()*

public boolean markSupported()

Tells whether this stream supports the mark() operation, which it does not. 



*java.io.PushbackReader.read()*

public int read()
  throws |java.io.IOException|
         
Reads a single character. 



    Returns: The character read, or -1 if the end of the stream has been reached 

*java.io.PushbackReader.read(char[],int,int)*

public int read(
  char[] cbuf,
  int off,
  int len)
  throws |java.io.IOException|
         
Reads characters into a portion of an array. 


    cbuf - Destination buffer 
    off - Offset at which to start writing characters 
    len - Maximum number of characters to read 

    Returns: The number of characters read, or -1 if the end of the stream has been reached 

*java.io.PushbackReader.ready()*

public boolean ready()
  throws |java.io.IOException|
         
Tells whether this stream is ready to be read. 



*java.io.PushbackReader.reset()*

public void reset()
  throws |java.io.IOException|
         
Resets the stream. The reset method of PushbackReader always throws an exception. 



*java.io.PushbackReader.skip(long)*

public long skip(long n)
  throws |java.io.IOException|
         
Skips characters. This method will block until some characters are available, an I/O error occurs, or the end of the stream is 
reached. 


    n - The number of characters to skip 

    Returns: The number of characters actually skipped 

*java.io.PushbackReader.unread(char[])*

public void unread(char[] cbuf)
  throws |java.io.IOException|
         
Pushes back an array of characters by copying it to the front of the pushback buffer. After this method returns, the next 
character to be read will have the value cbuf[0], the character after that will have the value cbuf[1], and so forth. 


    cbuf - Character array to push back 

*java.io.PushbackReader.unread(char[],int,int)*

public void unread(
  char[] cbuf,
  int off,
  int len)
  throws |java.io.IOException|
         
Pushes back a portion of an array of characters by copying it to the front of the pushback buffer. After this method returns, 
the next character to be read will have the value cbuf[off], the character after that will have the value cbuf[off+1], and so 
forth. 


    cbuf - Character array 
    off - Offset of first character to push back 
    len - Number of characters to push back 

*java.io.PushbackReader.unread(int)*

public void unread(int c)
  throws |java.io.IOException|
         
Pushes back a single character by copying it to the front of the pushback buffer. After this method returns, the next character 
to be read will have the value (char)c. 


    c - The int value representing a character to be pushed back 


