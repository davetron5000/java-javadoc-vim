*java.awt.geom.Ellipse2D* *Ellipse2D* The Ellipse2D class describes an ellipse that is defined
 by a framing rectangle.

public abstract class Ellipse2D
  extends    |java.awt.geom.RectangularShape|

|java.awt.geom.Ellipse2D_Description|
|java.awt.geom.Ellipse2D_Fields|
|java.awt.geom.Ellipse2D_Constructors|
|java.awt.geom.Ellipse2D_Methods|

================================================================================================================================

*java.awt.geom.Ellipse2D_Constructors*
|java.awt.geom.Ellipse2D()|This is an abstract class that cannot be instantiated directly.

*java.awt.geom.Ellipse2D_Methods*
|java.awt.geom.Ellipse2D.contains(double,double)|
|java.awt.geom.Ellipse2D.contains(double,double,double,double)|
|java.awt.geom.Ellipse2D.equals(Object)|Determines whether or not the specified Object is  equal to this Ellipse2D.
|java.awt.geom.Ellipse2D.getPathIterator(AffineTransform)|Returns an iteration object that defines the boundary of this  Ellips
|java.awt.geom.Ellipse2D.hashCode()|Returns the hashcode for this Ellipse2D.
|java.awt.geom.Ellipse2D.intersects(double,double,double,double)|

*java.awt.geom.Ellipse2D_Description*

The Ellipse2D class describes an ellipse that is defined by a framing rectangle. 

This class is only the abstract superclass for all objects which store a 2D ellipse. The actual storage representation of the 
coordinates is left to the subclass. 



*java.awt.geom.Ellipse2D()*

protected Ellipse2D()

This is an abstract class that cannot be instantiated directly. Type-specific implementation subclasses are available for 
instantiation and provide a number of formats for storing the information necessary to satisfy the various accessor methods 
below. 


*java.awt.geom.Ellipse2D.contains(double,double)*

public boolean contains(
  double x,
  double y)





*java.awt.geom.Ellipse2D.contains(double,double,double,double)*

public boolean contains(
  double x,
  double y,
  double w,
  double h)





*java.awt.geom.Ellipse2D.equals(Object)*

public boolean equals(java.lang.Object obj)

Determines whether or not the specified Object is equal to this Ellipse2D. The specified Object is equal to this Ellipse2D if 
it is an instance of Ellipse2D and if its location and size are the same as this Ellipse2D. 


    obj - an Object to be compared with this Ellipse2D. 

    Returns: true if obj is an instance of Ellipse2D and has the same values; false otherwise. 

*java.awt.geom.Ellipse2D.getPathIterator(AffineTransform)*

public |java.awt.geom.PathIterator| getPathIterator(java.awt.geom.AffineTransform at)

Returns an iteration object that defines the boundary of this Ellipse2D. The iterator for this class is multi-threaded safe, 
which means that this Ellipse2D class guarantees that modifications to the geometry of this Ellipse2D object do not affect any 
iterations of that geometry that are already in process. 


    at - an optional AffineTransform to be applied to the coordinates as they are returned in the iteration, or null if untransformed 
       coordinates are desired 

    Returns: the PathIterator object that returns the geometry of the outline of this Ellipse2D, one segment at a time. 

*java.awt.geom.Ellipse2D.hashCode()*

public int hashCode()

Returns the hashcode for this Ellipse2D. 



    Returns: the hashcode for this Ellipse2D. 

*java.awt.geom.Ellipse2D.intersects(double,double,double,double)*

public boolean intersects(
  double x,
  double y,
  double w,
  double h)






