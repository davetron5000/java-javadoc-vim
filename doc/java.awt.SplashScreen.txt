*java.awt.SplashScreen* *SplashScreen* The splash screen can be created at application startup, before the 
 Java Virtual Machin

public final class SplashScreen
  extends    |java.lang.Object|

|java.awt.SplashScreen_Description|
|java.awt.SplashScreen_Fields|
|java.awt.SplashScreen_Constructors|
|java.awt.SplashScreen_Methods|

================================================================================================================================

*java.awt.SplashScreen_Methods*
|java.awt.SplashScreen.close()|Hides the splash screen, closes the window, and releases all associated  resources.
|java.awt.SplashScreen.createGraphics()|Creates a graphics context (as aGraphics2Dobject) for the splash  screen overlay image,
|java.awt.SplashScreen.getBounds()|Returns the bounds of the splash screen window as aRectangle.
|java.awt.SplashScreen.getImageURL()|Returns the current splash screen image.
|java.awt.SplashScreen.getSize()|Returns the size of the splash screen window as aDimension.
|java.awt.SplashScreen.getSplashScreen()|Returns theSplashScreenobject used for  Java startup splash screen control.
|java.awt.SplashScreen.isVisible()|Determines whether the splash screen is visible.
|java.awt.SplashScreen.setImageURL(URL)|Changes the splash screen image.
|java.awt.SplashScreen.update()|Updates the splash window with current contents of the overlay image.

*java.awt.SplashScreen_Description*

The splash screen can be created at application startup, before the Java Virtual Machine (JVM) starts. The splash screen is 
displayed as an undecorated window containing an image. You can use GIF, JPEG, and PNG files for the image. Animation (for GIF) 
and transparency (for GIF, PNG) are supported. The window is positioned at the center of the screen (the position on 
multi-monitor systems is not specified - it is platform and implementation dependent). The window is closed automatically as 
soon as the first window is displayed by Swing/AWT (may be also closed manually using the Java API, see below). 

There are two ways to show the native splash screen: 

If your application is run from the command line or from a shortcut, use the "-splash:" Java application launcher option to 
show a splash screen. 

For example: 

java -splash:filename.gif Test 

If your application is packaged in a jar file, you can use the "SplashScreen-Image" option in a manifest file to show a splash 
screen. Place the image in the jar archive and specify the path in the option. The path should not have a leading slash. 

For example, in the manifest.mf file: 

Manifest-Version: 1.0 Main-Class: Test SplashScreen-Image: filename.gif 

The command line interface has higher precedence over the manifest setting. 

TheSplashScreenclass provides the API for controlling the splash screen. This class may be used to close the splash screen, 
change the splash screen image, get the image position/size and paint in the splash screen. It cannot be used to create the 
splash screen; you should use the command line or manifest file option for that. 

This class cannot be instantiated. Only a single instance of this class can exist, and it may be obtained using the 
(|java.awt.SplashScreen|) static method. In case the splash screen has not been created at application startup via the command 
line or manifest file option, the getSplashScreen method returns null. 



*java.awt.SplashScreen.close()*

public synchronized void close()
  throws |java.lang.IllegalStateException|
         
Hides the splash screen, closes the window, and releases all associated resources. 



*java.awt.SplashScreen.createGraphics()*

public |java.awt.Graphics2D| createGraphics()
  throws |java.lang.IllegalStateException|
         
Creates a graphics context (as a (|java.awt.Graphics2D|) object) for the splash screen overlay image, which allows you to draw 
over the splash screen. Note that you do not draw on the main image but on the image that is displayed over the main image 
using alpha blending. Also note that drawing on the overlay image does not necessarily update the contents of splash screen 
window. You should callupdate()on the SplashScreen when you want the splash screen to be updated immediately. 



    Returns: graphics context for the splash screen overlay surface 

*java.awt.SplashScreen.getBounds()*

public |java.awt.Rectangle| getBounds()
  throws |java.lang.IllegalStateException|
         
Returns the bounds of the splash screen window as a (|java.awt.Rectangle|) . This may be useful if, for example, you want to 
replace the splash screen with your window at the same location. 

You cannot control the size or position of the splash screen. The splash screen size is adjusted automatically when the image 
changes. 



    Returns: a {@code Rectangle} containing the splash screen bounds 

*java.awt.SplashScreen.getImageURL()*

public synchronized |java.net.URL| getImageURL()
  throws |java.lang.IllegalStateException|
         
Returns the current splash screen image. 



    Returns: URL for the current splash screen image file 

*java.awt.SplashScreen.getSize()*

public |java.awt.Dimension| getSize()
  throws |java.lang.IllegalStateException|
         
Returns the size of the splash screen window as a (|java.awt.Dimension|) . This may be useful if, for example, you want to draw 
on the splash screen overlay surface. 

You cannot control the size or position of the splash screen. The splash screen size is adjusted automatically when the image 
changes. 



    Returns: a {@link Dimension} object indicating the splash screen size 

*java.awt.SplashScreen.getSplashScreen()*

public static synchronized |java.awt.SplashScreen| getSplashScreen()

Returns theSplashScreenobject used for Java startup splash screen control. 



    Returns: the {@link SplashScreen} instance, or null if there is none or it has already been closed 

*java.awt.SplashScreen.isVisible()*

public boolean isVisible()

Determines whether the splash screen is visible. The splash screen may be hidden using (|java.awt.SplashScreen|) , it is also 
hidden automatically when the first AWT/Swing window is made visible. 



    Returns: true if the splash screen is visible (has not been closed yet), false otherwise 

*java.awt.SplashScreen.setImageURL(URL)*

public void setImageURL(java.net.URL imageURL)
  throws |java.lang.IllegalStateException|
         |java.io.IOException|
         |java.lang.NullPointerException|
         
Changes the splash screen image. The new image is loaded from the specified URL; GIF, JPEG and PNG image formats are supported. 
The method returns after the image has finished loading and the window has been updated. The splash screen window is resized 
according to the size of the image and is centered on the screen. 


    imageURL - the non-null URL for the new splash screen image 

*java.awt.SplashScreen.update()*

public void update()
  throws |java.lang.IllegalStateException|
         
Updates the splash window with current contents of the overlay image. 




