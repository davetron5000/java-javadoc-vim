*java.net.CookieStore* *CookieStore* A CookieStore object represents a storage for cookie.

public interface interface CookieStore


|java.net.CookieStore_Description|
|java.net.CookieStore_Fields|
|java.net.CookieStore_Constructors|
|java.net.CookieStore_Methods|

================================================================================================================================

*java.net.CookieStore_Methods*
|java.net.CookieStore.add(URI,HttpCookie)|Adds one HTTP cookie to the store.
|java.net.CookieStore.get(URI)|Retrieve cookies associated with given URI, or whose domain matches the  given URI.
|java.net.CookieStore.getCookies()|Get all not-expired cookies in cookie store.
|java.net.CookieStore.getURIs()|Get all URIs which identify the cookies in this cookie store.
|java.net.CookieStore.remove(URI,HttpCookie)|Remove a cookie from store.
|java.net.CookieStore.removeAll()|Remove all cookies in this cookie store.

*java.net.CookieStore_Description*

A CookieStore object represents a storage for cookie. Can store and retrieve cookies. 

(|java.net.CookieManager|) will call CookieStore.add to save cookies for every incoming HTTP response, and call CookieStore.get 
to retrieve cookie for every outgoing HTTP request. A CookieStore is responsible for removing HttpCookie instances which have 
expired. 



*java.net.CookieStore.add(URI,HttpCookie)*

public void add(
  java.net.URI uri,
  java.net.HttpCookie cookie)

Adds one HTTP cookie to the store. This is called for every incoming HTTP response. 

A cookie to store may or may not be associated with an URI. If it is not associated with an URI, the cookie's domain and path 
attribute will indicate where it comes from. If it is associated with an URI and its domain and path attribute are not 
speicifed, given URI will indicate where this cookie comes from. 

If a cookie corresponding to the given URI already exists, then it is replaced with the new one. 


    uri - the uri this cookie associated with. if null, this cookie will not be associated with an URI 
    cookie - the cookie to store 

*java.net.CookieStore.get(URI)*

public |java.util.List|<HttpCookie> get(java.net.URI uri)

Retrieve cookies associated with given URI, or whose domain matches the given URI. Only cookies that have not expired are 
returned. This is called for every outgoing HTTP request. 



    Returns: an immutable list of HttpCookie, return empty list if no cookies match the given URI 

*java.net.CookieStore.getCookies()*

public |java.util.List|<HttpCookie> getCookies()

Get all not-expired cookies in cookie store. 



    Returns: an immutable list of http cookies; return empty list if there's no http cookie in store 

*java.net.CookieStore.getURIs()*

public |java.util.List|<URI> getURIs()

Get all URIs which identify the cookies in this cookie store. 



    Returns: an immutable list of URIs; return empty list if no cookie in this cookie store is associated with an URI 

*java.net.CookieStore.remove(URI,HttpCookie)*

public boolean remove(
  java.net.URI uri,
  java.net.HttpCookie cookie)

Remove a cookie from store. 


    uri - the uri this cookie associated with. if null, the cookie to be removed is not associated with an URI when added; if not null, 
       the cookie to be removed is associated with the given URI when added. 
    cookie - the cookie to remove 

    Returns: true if this store contained the specified cookie 

*java.net.CookieStore.removeAll()*

public boolean removeAll()

Remove all cookies in this cookie store. 



    Returns: true if this store changed as a result of the call 


