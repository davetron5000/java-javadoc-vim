*java.awt.Desktop* *Desktop* TheDesktopclass allows a Java application to launch
 associated applications registered on the nati

public class Desktop
  extends    |java.lang.Object|

|java.awt.Desktop_Description|
|java.awt.Desktop_Fields|
|java.awt.Desktop_Constructors|
|java.awt.Desktop_Methods|

================================================================================================================================

*java.awt.Desktop_Methods*
|java.awt.Desktop.browse(URI)|Launches the default browser to display aURI.
|java.awt.Desktop.edit(File)|Launches the associated editor application and opens a file for  editing.
|java.awt.Desktop.getDesktop()|Returns the Desktop instance of the current  browser context.
|java.awt.Desktop.isDesktopSupported()|Tests whether this class is supported on the current platform.
|java.awt.Desktop.isSupported(Desktop.Action)|Tests whether an action is supported on the current platform.
|java.awt.Desktop.mail()|Launches the mail composing window of the user default mail  client.
|java.awt.Desktop.mail(URI)|Launches the mail composing window of the user default mail  client, filling the message fields spe
|java.awt.Desktop.open(File)|Launches the associated application to open the file.
|java.awt.Desktop.print(File)|Prints a file with the native desktop printing facility, using  the associated application's prin

*java.awt.Desktop_Description*

TheDesktopclass allows a Java application to launch associated applications registered on the native desktop to handle a 
(|java.net.URI|) or a file. 

Supported operations include: 

launching the user-default browser to show a specified URI; launching the user-default mail client with an optionalmailtoURI; 
launching a registered application to open, edit or print a specified file. 

This class provides methods corresponding to these operations. The methods look for the associated application registered on 
the current platform, and launch it to handle a URI or file. If there is no associated application or the associated 
application fails to be launched, an exception is thrown. 

An application is registered to a URI or file type; for example, the"sxi"file extension is typically registered to StarOffice. 
The mechanism of registereing, accessing, and launching the associated application is platform-dependent. 

Each operation is an action type represented by the (|java.awt.Desktop.Action|) class. 

Note: when some action is invoked and the associated application is executed, it will be executed on the same system as the one 
on which the Java application was launched. 



*java.awt.Desktop.browse(URI)*

public void browse(java.net.URI uri)
  throws |java.io.IOException|
         
Launches the default browser to display aURI. If the default browser is not able to handle the specifiedURI, the application 
registered for handlingURIsof the specified type is invoked. The application is determined from the protocol and path of 
theURI, as defined by theURIclass. 

If the calling thread does not have the necessary permissions, and this is invoked from within an 
applet,AppletContext.showDocument()is used. Similarly, if the calling does not have the necessary permissions, and this is 
invoked from within a Java Web Started application,BasicService.showDocument()is used. 


    uri - the URI to be displayed in the user default browser 

*java.awt.Desktop.edit(File)*

public void edit(java.io.File file)
  throws |java.io.IOException|
         
Launches the associated editor application and opens a file for editing. 


    file - the file to be opened for editing 

*java.awt.Desktop.getDesktop()*

public static synchronized |java.awt.Desktop| getDesktop()

Returns the Desktop instance of the current browser context. On some platforms the Desktop API may not be supported; use the 
(|java.awt.Desktop|) method to determine if the current desktop is supported. 



    Returns: the Desktop instance of the current browser context 

*java.awt.Desktop.isDesktopSupported()*

public static boolean isDesktopSupported()

Tests whether this class is supported on the current platform. If it's supported, use (|java.awt.Desktop|) to retrieve an 
instance. 



    Returns: true if this class is supported on the current platform; false otherwise 

*java.awt.Desktop.isSupported(Desktop.Action)*

public boolean isSupported(java.awt.Desktop.Action action)

Tests whether an action is supported on the current platform. 

Even when the platform supports an action, a file or URI may not have a registered application for the action. For example, 
most of the platforms support the (|java.awt.Desktop.Action|) action. But for a specific file, there may not be an application 
registered to open it. In this case, (|java.awt.Desktop|) may returntrue, but the corresponding action method will throw an 
(|java.io.IOException|) . 


    action - the specified {@link Action} 

    Returns: true if the specified action is supported on the current platform; false otherwise 

*java.awt.Desktop.mail()*

public void mail()
  throws |java.io.IOException|
         
Launches the mail composing window of the user default mail client. 



*java.awt.Desktop.mail(URI)*

public void mail(java.net.URI mailtoURI)
  throws |java.io.IOException|
         
Launches the mail composing window of the user default mail client, filling the message fields specified by amailto:URI. 

A mailto: URI can specify message fields including "to", "cc", "subject", "body", etc. See The mailto URL scheme (RFC 2368) for 
themailto:URI specification details. 


    mailtoURI - the specified {@code mailto:} URI 

*java.awt.Desktop.open(File)*

public void open(java.io.File file)
  throws |java.io.IOException|
         
Launches the associated application to open the file. 

If the specified file is a directory, the file manager of the current platform is launched to open it. 


    file - the file to be opened with the associated application 

*java.awt.Desktop.print(File)*

public void print(java.io.File file)
  throws |java.io.IOException|
         
Prints a file with the native desktop printing facility, using the associated application's print command. 


    file - the file to be printed 


