*java.awt.font.TransformAttribute* *TransformAttribute* The TransformAttribute class provides an immutable
 wrapper for a transf

public final class TransformAttribute
  extends    |java.lang.Object|
  implements |java.io.Serializable|

|java.awt.font.TransformAttribute_Description|
|java.awt.font.TransformAttribute_Fields|
|java.awt.font.TransformAttribute_Constructors|
|java.awt.font.TransformAttribute_Methods|

================================================================================================================================

*java.awt.font.TransformAttribute_Fields*
|java.awt.font.TransformAttribute_java.awt.font.TransformAttribute.IDENTITY|

*java.awt.font.TransformAttribute_Constructors*
|java.awt.font.TransformAttribute(AffineTransform)|Wraps the specified transform.

*java.awt.font.TransformAttribute_Methods*
|java.awt.font.TransformAttribute.equals(Object)|Returns true if rhs is a TransformAttribute  whose transform is equal to this 
|java.awt.font.TransformAttribute.getTransform()|Returns a copy of the wrapped transform.
|java.awt.font.TransformAttribute.hashCode()|
|java.awt.font.TransformAttribute.isIdentity()|Returns true if the wrapped transform is  an identity transform.

*java.awt.font.TransformAttribute_Description*

The TransformAttribute class provides an immutable wrapper for a transform so that it is safe to use as an attribute. 



*java.awt.font.TransformAttribute_java.awt.font.TransformAttribute.IDENTITY*

A TransformAttribute representing the identity transform. 



*java.awt.font.TransformAttribute(AffineTransform)*

public TransformAttribute(java.awt.geom.AffineTransform transform)

Wraps the specified transform. The transform is cloned and a reference to the clone is kept. The original transform is 
unchanged. If null is passed as the argument, this constructor behaves as though it were the identity transform. (Note that it 
is preferable to use (|java.awt.font.TransformAttribute|) in this case.) 

    transform - the specified {@link AffineTransform} to be wrapped, or null. 

*java.awt.font.TransformAttribute.equals(Object)*

public boolean equals(java.lang.Object rhs)

Returns true if rhs is a TransformAttribute whose transform is equal to this TransformAttribute's transform. 


    rhs - the object to compare to 

    Returns: true if the argument is a TransformAttribute whose transform is equal to this TransformAttribute's transform. 

*java.awt.font.TransformAttribute.getTransform()*

public |java.awt.geom.AffineTransform| getTransform()

Returns a copy of the wrapped transform. 



    Returns: a AffineTransform that is a copy of the wrapped transform of this TransformAttribute. 

*java.awt.font.TransformAttribute.hashCode()*

public int hashCode()





*java.awt.font.TransformAttribute.isIdentity()*

public boolean isIdentity()

Returns true if the wrapped transform is an identity transform. 



    Returns: true if the wrapped transform is an identity transform; false otherwise. 


