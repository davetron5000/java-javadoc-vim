*java.net.CookiePolicy* *CookiePolicy* CookiePolicy implementations decide which cookies should be accepted
 and which should be

public interface interface CookiePolicy


|java.net.CookiePolicy_Description|
|java.net.CookiePolicy_Fields|
|java.net.CookiePolicy_Constructors|
|java.net.CookiePolicy_Methods|

================================================================================================================================

*java.net.CookiePolicy_Fields*
|java.net.CookiePolicy_java.net.CookiePolicy.ACCEPT_ALL|
|java.net.CookiePolicy_java.net.CookiePolicy.ACCEPT_NONE|
|java.net.CookiePolicy_java.net.CookiePolicy.ACCEPT_ORIGINAL_SERVER|

*java.net.CookiePolicy_Methods*
|java.net.CookiePolicy.shouldAccept(URI,HttpCookie)|Will be called to see whether or not this cookie should be accepted.

*java.net.CookiePolicy_Description*

CookiePolicy implementations decide which cookies should be accepted and which should be rejected. Three pre-defined policy 
implementations are provided, namely ACCEPT_ALL, ACCEPT_NONE and ACCEPT_ORIGINAL_SERVER. 

See RFC 2965 sec. 3.3 & 7 for more detail. 



*java.net.CookiePolicy_java.net.CookiePolicy.ACCEPT_ALL*

One pre-defined policy which accepts all cookies. 


*java.net.CookiePolicy_java.net.CookiePolicy.ACCEPT_NONE*

One pre-defined policy which accepts no cookies. 


*java.net.CookiePolicy_java.net.CookiePolicy.ACCEPT_ORIGINAL_SERVER*

One pre-defined policy which only accepts cookies from original server. 



*java.net.CookiePolicy.shouldAccept(URI,HttpCookie)*

public boolean shouldAccept(
  java.net.URI uri,
  java.net.HttpCookie cookie)

Will be called to see whether or not this cookie should be accepted. 


    uri - the URI to consult accept policy with 
    cookie - the HttpCookie object in question 

    Returns: true if this cookie should be accepted; otherwise, false 


