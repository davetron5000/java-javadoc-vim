*java.awt.font.LayoutPath* *LayoutPath* LayoutPath provides a mapping between locations relative to the
 baseline and points in 

public abstract class LayoutPath
  extends    |java.lang.Object|

|java.awt.font.LayoutPath_Description|
|java.awt.font.LayoutPath_Fields|
|java.awt.font.LayoutPath_Constructors|
|java.awt.font.LayoutPath_Methods|

================================================================================================================================

*java.awt.font.LayoutPath_Constructors*
|java.awt.font.LayoutPath()|

*java.awt.font.LayoutPath_Methods*
|java.awt.font.LayoutPath.pathToPoint(Point2D,boolean,Point2D)|Convert a location relative to the path to a point in user  coor
|java.awt.font.LayoutPath.pointToPath(Point2D,Point2D)|Convert a point in user space to a location relative to the  path.

*java.awt.font.LayoutPath_Description*

LayoutPath provides a mapping between locations relative to the baseline and points in user space. Locations consist of an 
advance along the baseline, and an offset perpendicular to the baseline at the advance. Positive values along the perpendicular 
are in the direction that is 90 degrees clockwise from the baseline vector. Locations are represented as a Point2D, where x is 
the advance and y is the offset. 



*java.awt.font.LayoutPath()*

public LayoutPath()




*java.awt.font.LayoutPath.pathToPoint(Point2D,boolean,Point2D)*

public abstract void pathToPoint(
  java.awt.geom.Point2D location,
  boolean preceding,
  java.awt.geom.Point2D point)

Convert a location relative to the path to a point in user coordinates. The path might bend abruptly or be disjoint at the 
location's advance. If this is the case, the value of 'preceding' is used to disambiguate the portion of the path whose 
location and slope is to be used to interpret the offset. 


    location - a Point2D representing the advance (in x) and offset (in y) of a location relative to the path. If location is not the same 
       object as point, location will remain unmodified by this call. 
    preceding - if true, the portion preceding the advance should be used, if false the portion after should be used. This has no effect if the 
       path does not break or bend sharply at the advance. 
    point - a Point2D to hold the returned point. It can be the same object as location. 

*java.awt.font.LayoutPath.pointToPath(Point2D,Point2D)*

public abstract boolean pointToPath(
  java.awt.geom.Point2D point,
  java.awt.geom.Point2D location)

Convert a point in user space to a location relative to the path. The location is chosen so as to minimize the distance from 
the point to the path (e.g., the magnitude of the offset will be smallest). If there is more than one such location, the 
location with the smallest advance is chosen. 


    point - the point to convert. If it is not the same object as location, point will remain unmodified by this call. 
    location - a Point2D to hold the returned location. It can be the same object as point. 

    Returns: true if the point is associated with the portion of the path preceding the location, false if it is associated with the portion 
             following. The default, if the location is not at a break or sharp bend in the path, is to return true. 


